{"version":3,"sources":["Components/Battlefield.module.css","Components/BoardView.module.css","Components/PlayersList.module.css","LocalPlayer/SetupBoard.module.css","App.module.css","serviceWorker.js","Models/Ship.js","Models/Board.js","Models/Player.js","Models/Game.js","Components/Menu.js","Components/SelectionList.js","AI/EasyAI.js","AI/MediumAI.js","AI/HardAI.js","AI/ConvNLAI.js","LocalPlayer/LocalPlayer.js","Components/PlayersLists.js","Components/ShipComponent.js","Components/ShipList.js","Components/BoardView.js","Components/Battlefield.js","Components/ConclusionScreen.js","LocalPlayer/SetupBoard.js","App.js","GameRunner.js","GameConsumer.js","index.js","Components/ShipComponent.module.css","Components/Menu.module.css","Components/ConclusionScreen.module.css","Components/SelectionList.module.css","Components/ShipList.module.css"],"names":["module","exports","battlefield","sideShipList","leftShipList","rightShipList","boards","gap","player","currentPlayer","fleetName","board","view","battle","setup","sneakPeak","cell","sink","hit","water","unrevealed","validTarget","active","invalid","playersPicker","playersLists","startGame","firstPlayer","playersList","VS","playerNo","boardSetup","controls","info","reset","rnd","start","disabled","landing","landingBackground","fog","fogLayer","fogFirstLayer","marquee","fogSecondLayer","Button","DisabledButton","returnToMainMenu","Boolean","window","location","hostname","match","SHAPES","HORIZONTAL","VERTICAL","TYPES","name","size","STATES","SUNKEN","GARAGE","FLOATING","Ship","type","_classCallCheck","this","_type","_name","_size","_hitpoints","_state","_shape","shape","undefined","Object","values","indexOf","UNREVEALED","WATER","RESULTS","HIT","SINK","ERROR","NUM_2_STR","_defineProperty","_NUM_2_STR","SHIP_SHAPES","shapes","Board","dim","arguments","length","Board_classCallCheck","_dim","nj","ones","multiply","tolist","_setup","_shipsBoard","_ships","_history","target","Number","isInteger","Array","isArray","_target","_slicedToArray","targetCol","targetRow","verifyTarget","state","ship","orientation","totalCol","totalRow","_target2","i","Math","max","min","shipsPos","ships","tempBoard","launch","pos","nestedArray","map","row","rowId","colId","verifyShipPosition","_","flatten","filter","item","find","STATE","clear","_pos","posCol","posRow","_isShipOnBoard","push","_toSetup","_this","forEach","remove","_this2","_ref","_ref$seed","seed","_ref$keepShape","keepShape","solvable","random","seedrandom","rand","floor","rotate","availableSpots","spot","result","history","_target3","sinkShip","shipPos","_dim2","_shipPos$pos","join","Player","game","_game","_board","hitpoints","opponents","prevShootState","SHIP_TYPES","types","results","UNREADY","STATE_ENUMS","READY","SETUP","BATTLE","FINISHED","Game","_ref$dim","defaultDim","_ref$shipTypes","shipTypes","defaultShipTypesList","Game_classCallCheck","_shipTypes","_players","_started","_winners","_losers","_turn","newState","players","currentPlayerNo","turnNo","isPlayerIn","enter","_player","leave","entry","shootingPlayer","last","promises","ready","Promise","all","_changeState","_boards","cb","noop","_cb","_assignBoardsToPlayers","_attempts","attempts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","set","get","err","return","reduce","Map","from","_attempt","some","attempt","winners","losers","finish","_createShips","verdicts","verify","every","verdict","verifySetup","pl","turn","prevShoot","_prevShootOf","shootState","recievingPlayer","verifyShootingTarget","shoot","_nextTurn","floatingShips","_resetAttempts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","win","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","lose","Menu","Component","react_default","a","createElement","className","styles","menuContainer","menu","pixelFlag","pixelFlagText","onClick","props","newGame","SelectionList","select","selected","items","index","key","bind","list","PRIME","NUM","EasyAI","_ref$delay","delay","_ref$name","EasyAI_classCallCheck","EasyAI_possibleConstructorReturn","EasyAI_getPrototypeOf","call","_random","_delay","resolve","reject","setTimeout","_this3","_get","prototype","boardNeedsSetup","console","log","launchRandomly","available","unrevealedCells","MediumAI","MediumAI_classCallCheck","MediumAI_possibleConstructorReturn","MediumAI_getPrototypeOf","prevResult","firstCellHit","orientationOfHuntedShip","lastCellHit","lastHITSpots","firstHITSpots","_availableSpotsAround","concat","DATA","array","data","reshape","HardAI","HardAI_classCallCheck","HardAI_possibleConstructorReturn","HardAI_getPrototypeOf","proposition","subtract","prob","softmax","ConvNLAI","ConvNLAI_classCallCheck","ConvNLAI_possibleConstructorReturn","ConvNLAI_getPrototypeOf","tf","href","model","boardState","modelFeed","predict","acc","curr","currIndex","col","LocalPlayer","_ref$setupCallback","setupCallback","_ref$turnCallback","turnCallback","LocalPlayer_classCallCheck","LocalPlayer_possibleConstructorReturn","LocalPlayer_getPrototypeOf","PlayersList","PlayersLists_classCallCheck","PlayersLists_possibleConstructorReturn","PlayersLists_getPrototypeOf","selectedPlayers","cls","ComputerPlayers","onStartGame","keys","replace","playersWithLocal","clone","_this$state","setState","whoGoesFirst","Components_SelectionList","selectPlayer","ShipComponent","_this$props","highlight","damage","structure","damagedPart","healthyPart","highlightedShip","ShipList","style","_this$props$side","side","mode","clickable","wrapper","Components_ShipComponent","activeShip","BoardView","activeIndex","keyDown","e","onRotate","mouseOut","mouseMove","childElementCount","parent","parentElement","children","isValidPosition","fire","document","addEventListener","removeEventListener","isValidShootingTarget","stylesString","someCol","someRow","_this$props2","onClickCallback","onMoveCallback","onLeaveCallback","BoardView_slicedToArray","cells","calculateStyleName","onPointerMove","onPointerLeave","gridTemplateColumns","gridTemplateRows","Battlefield","gameRunner","gameInterface","getPlayers","boardOneMode","boardTwoMode","getCurrentPlayer","Components_ShipList","getTurnNo","Components_BoardView","finishLocalPlayerTurn","DEFAULT_STATE","hidden","ConclusionScreen","hide","modal","display","conclusion","X","text","box","SetupBoard","takeShip","listedShip","wasSuccess","Error","GAME_STATES","states","App","createNewGame","addPlayersAndStartGame","addPlayers","mainMenu","resetGame","contents","afterGame","_this$props$gameInter","gameState","Components_Menu","PlayersLists","LocalPlayer_SetupBoard","getLocalPlayer","finishLocalPlayerSetup","Components_Battlefield","Components_ConclusionScreen","winner","AI_DELAY","localPlayer","board1","board2","GameContext","createContext","GameRunner","setupDeferred","startLocalPlayerSetup","_callee","regenerator_default","wrap","_context","prev","promise","res","rej","abrupt","stop","turnDeferred","startLocalPlayerTurn","_callee2","_ref3","_context2","sent","PlayerCls","add","updateFE","_callee3","_context3","getBoardDim","getBoardState","playerId","Provider","localPlayerSetup","GameConsumer","Consumer","Children","child","cloneElement","ReactDOM","render","src_GameRunner","GameConsumer_GameConsumer","src_App","getElementById","navigator","serviceWorker","then","registration","unregister","part","right"],"mappings":"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","file":"static/js/main.af967889.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"battlefield\":\"Battlefield_battlefield___yDJO\",\"sideShipList\":\"Battlefield_sideShipList__1AbxA\",\"leftShipList\":\"Battlefield_leftShipList__13_ZI Battlefield_sideShipList__1AbxA\",\"rightShipList\":\"Battlefield_rightShipList__2XKfn Battlefield_sideShipList__1AbxA\",\"boards\":\"Battlefield_boards__3iAX0\",\"gap\":\"Battlefield_gap__3HiPb\",\"player\":\"Battlefield_player__Em4Ze\",\"currentPlayer\":\"Battlefield_currentPlayer__1nwZZ Battlefield_player__Em4Ze\",\"fleetName\":\"Battlefield_fleetName__1KnVf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"BoardView_board__2h3i8\",\"view\":\"BoardView_view__lwBSB\",\"battle\":\"BoardView_battle__2caGw\",\"setup\":\"BoardView_setup__2e0M-\",\"sneakPeak\":\"BoardView_sneakPeak__2eLDL\",\"cell\":\"BoardView_cell__1aacS\",\"sink\":\"BoardView_sink__1LRTE BoardView_cell__1aacS\",\"hit\":\"BoardView_hit__1r4lS BoardView_cell__1aacS\",\"water\":\"BoardView_water__1F_3j BoardView_cell__1aacS\",\"unrevealed\":\"BoardView_unrevealed__D_Q4t BoardView_cell__1aacS\",\"validTarget\":\"BoardView_validTarget__2Aotq BoardView_cell__1aacS\",\"active\":\"BoardView_active__1ts74 BoardView_water__1F_3j BoardView_cell__1aacS\",\"invalid\":\"BoardView_invalid__3NqUm BoardView_active__1ts74 BoardView_water__1F_3j BoardView_cell__1aacS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playersPicker\":\"PlayersList_playersPicker__3aSYO\",\"playersLists\":\"PlayersList_playersLists__2V6Dw\",\"startGame\":\"PlayersList_startGame__skiz1 App_Button__3oVZq\",\"firstPlayer\":\"PlayersList_firstPlayer__5wMiG\",\"playersList\":\"PlayersList_playersList__AO5WR\",\"VS\":\"PlayersList_VS__3V9_9\",\"playerNo\":\"PlayersList_playerNo__2eH-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setup\":\"SetupBoard_setup__d7QdX\",\"boardSetup\":\"SetupBoard_boardSetup__fv4Wz\",\"controls\":\"SetupBoard_controls__3EP2f\",\"info\":\"SetupBoard_info__LdjII\",\"reset\":\"SetupBoard_reset__2k3EC App_Button__3oVZq\",\"rnd\":\"SetupBoard_rnd__3mKhp App_Button__3oVZq\",\"start\":\"SetupBoard_start__3WsLW App_Button__3oVZq\",\"disabled\":\"SetupBoard_disabled__2gCXI App_DisabledButton__31tus App_Button__3oVZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing\":\"App_landing__9_yLb\",\"landingBackground\":\"App_landingBackground__1qxy1\",\"fog\":\"App_fog__33yNV\",\"fogLayer\":\"App_fogLayer__3e59I\",\"fogFirstLayer\":\"App_fogFirstLayer__1ie5I App_fogLayer__3e59I\",\"marquee\":\"App_marquee__1kwMd\",\"fogSecondLayer\":\"App_fogSecondLayer__3LAWr App_fogLayer__3e59I\",\"Button\":\"App_Button__3oVZq\",\"DisabledButton\":\"App_DisabledButton__31tus App_Button__3oVZq\",\"returnToMainMenu\":\"App_returnToMainMenu__3F0jT App_Button__3oVZq\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SHAPES = {\n  HORIZONTAL: 0,\n  VERTICAL: 1,\n};\n\n// http://www.pirateglossary.com/ships/\nconst TYPES = [\n  { name: 'Sloop', size: 1 },\n  { name: 'Brigantine', size: 2 },\n  { name: 'Frigate', size: 3 },\n  { name: 'Galleon', size: 4 },\n];\n\nconst STATES = {\n  SUNKEN: 0,\n  GARAGE: 1,\n  FLOATING: 2,\n};\n\nclass Ship {\n\n  static types() {\n    return TYPES;\n  }\n\n  static shapes() {\n    return SHAPES;\n  }\n\n  static states() {\n    return STATES;\n  }\n\n  constructor(type) {\n    if (type) {\n      this._type = type;\n      this._name = type.name;\n      this._size = type.size;\n    } else {\n      this._name = '';\n      this._size = 0;\n    }\n\n    this._hitpoints = this._size;\n    this._state = STATES.GARAGE;\n    this._shape = SHAPES.HORIZONTAL;\n  }\n\n  name() {\n    return this._name;\n  }\n\n  hitpoints() {\n    return this._hitpoints;\n  }\n\n  hit() {\n    if (this._hitpoints > 0) {\n      this._hitpoints--;\n    }\n\n    if (this._hitpoints === 0) {\n      this.sink();\n    }\n\n    return this._hitpoints;\n  }\n\n  sink() {\n    this._hitpoints = 0;\n    return this._state = STATES.SUNKEN;\n  }\n\n  launch() {\n    return this._state = STATES.FLOATING;\n  }\n\n  state() {\n    return this._state;\n  }\n\n  type() {\n    return this._type;\n  }\n\n  size() {\n    return this._size;\n  }\n\n  shape(shape) {\n    if (shape === undefined) {\n      return this._shape;\n    } else {\n      if (Object.values(SHAPES).indexOf(shape) === -1) {\n        return;\n      }\n\n      this._shape = shape;\n    }\n\n    return this._shape;\n  }\n\n  rotate() {\n    this._shape = (this._shape + 1) % 2;\n    return this;\n  }\n}\n\nexport default Ship;\n","import _ from 'lodash';\nimport nj from 'numjs';\nimport seedrandom from 'seedrandom';\n\nimport Ship from './Ship';\n\nconst ERROR = -1;\nconst UNREVEALED = 0;\nconst WATER = 1;\nconst HIT = 2;\nconst SINK = 3;\nconst RESULTS = { UNREVEALED, WATER, HIT, SINK, ERROR };\n\nconst NUM_2_STR = {\n  [UNREVEALED]: '-',\n  [WATER]: '~',\n  [HIT]: 'Y',\n  [SINK]: 'X',\n};\n\nconst SHIP_SHAPES = Ship.shapes();\n\nclass Board {\n  static results() {\n    return RESULTS;\n  }\n\n  static num2str() {\n    return NUM_2_STR;\n  }\n\n  static verifyTarget(board, target) {\n    let dim = board.dim();\n    let valid = Number.isInteger(target[0]) &&\n                Number.isInteger(target[1]) &&\n                target[0] >= 0 && target[1] >= 0 &&\n                target[0] < dim[0] && target[1] < dim[1];\n\n    return valid;\n  }\n\n  static verifyShootingTarget(board, target) {\n    if (!Array.isArray(target)) {\n      return false;\n    }\n\n    let [targetCol, targetRow] = target;\n    return Board.verifyTarget(board, target) &&\n            board.state()[targetRow][targetCol] === UNREVEALED;\n  }\n\n  static verifyShipPosition(board, target, ship) {\n    let size = ship.size();\n    let orientation = ship.shape();\n    let setup = board._setup;\n    let dim = board.dim();\n    let [totalCol, totalRow] = dim;\n    let [targetCol, targetRow] = target;\n\n    if (orientation === SHIP_SHAPES.HORIZONTAL) {\n      if (targetCol + size > totalCol) {\n        return false;\n      }\n\n      for (let i = -1; i <= size && targetCol + i < totalCol; i++) {\n        if (\n          setup[Math.max(targetRow - 1, 0)][Math.max(targetCol + i, 0)] === SINK ||\n          setup[targetRow][Math.max(targetCol + i, 0)] === SINK ||\n          setup[Math.min(targetRow + 1, totalRow - 1)][Math.max(targetCol + i, 0)] === SINK\n        ) {\n          return false;\n        }\n      }\n    } else if (orientation === SHIP_SHAPES.VERTICAL) {\n      if (targetRow + size > totalRow) {\n        return false;\n      }\n\n      for (let i = -1; i <= size && targetRow + i < totalRow; i++) {\n        if (\n          setup[Math.max(targetRow + i, 0)][Math.max(targetCol - 1, 0)] === SINK ||\n          setup[Math.max(targetRow + i, 0)][targetCol] === SINK ||\n          setup[Math.max(targetRow + i, 0)][Math.min(targetCol + 1, totalCol - 1)] === SINK\n        ) {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  static verifySetup(board) {\n    let shipsPos;\n    let dim;\n\n    if (board instanceof Board) {\n      shipsPos = board.ships();\n      dim = board.dim();\n    } else {\n      shipsPos = board;\n    }\n\n    let tempBoard = new Board(dim);\n\n    for (let i = 0; i < shipsPos.length; i++) {\n      if (!tempBoard.launch(shipsPos[i].pos, shipsPos[i].ship)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static availableSpots(board, ship) {\n    let setup = board.setup();\n\n    let nestedArray = setup.map(\n      (row, rowId) => row.map(\n        (cell, colId) => {\n          if (Board.verifyShipPosition(board, [colId, rowId], ship)) {\n            return [colId, rowId];\n          } else {\n            return null;\n          }\n        }\n      )\n    );\n\n    return _.flatten(nestedArray).filter(item => item !== null);\n  }\n\n  constructor(dim = [10, 10]) {\n    this._dim = dim; //[col, row]\n    this._state = nj.ones(dim).multiply(UNREVEALED).tolist();\n    this._setup = nj.ones(dim).multiply(WATER).tolist();\n    this._shipsBoard = nj.ones(dim).multiply(WATER).tolist();\n    this._ships = [];\n    this._history = [];\n  }\n\n  dim() {\n    return this._dim;\n  }\n\n  // Interface for ships\n  ships() {\n    return this._ships;\n  }\n\n  _isShipOnBoard(ship) {\n    return this._ships.find(item => item.ship === ship);\n  }\n\n  _toSetup(pos, ship, STATE, clear=false) {\n    let orientation = ship.shape();\n    let size = ship.size();\n    let [posCol, posRow] = pos;\n\n    if (orientation === SHIP_SHAPES.HORIZONTAL) {\n      for (let i = 0; i < size; i++) {\n        this._setup[posRow][posCol + i] = STATE;\n        if (clear) {\n          this._shipsBoard[posRow][posCol + i] = undefined;\n        } else {\n          this._shipsBoard[posRow][posCol + i] = ship;\n        }\n      }\n    } else if (orientation === SHIP_SHAPES.VERTICAL) {\n      for (let i = 0; i < size; i++) {\n        this._setup[posRow + i][posCol] = STATE;\n        if (clear) {\n          this._shipsBoard[posRow + i][posCol] = undefined;\n        } else {\n          this._shipsBoard[posRow + i][posCol] = ship;\n        }\n      }\n    }\n  }\n\n  launch(pos, ship) {\n    if (!Board.verifyTarget(this, pos)) {\n      return false;\n    }\n\n    if (!Board.verifyShipPosition(this, pos, ship)) {\n      return false;\n    }\n\n    if (this._isShipOnBoard(ship)) {\n      return false;\n    }\n\n    this._ships.push({\n      ship,\n      pos,\n    });\n\n    this._toSetup(pos, ship, SINK);\n\n    return true;\n  }\n\n  remove(ship) {\n    if (this._isShipOnBoard(ship)) {\n      let item = this._ships.find(item => item.ship === ship);\n      this._toSetup(item.pos, ship, WATER, true);\n      this._ships = this._ships.filter(item => item.ship !== ship);\n      return ship;\n    } else {\n      return false;\n    }\n  }\n\n  clear() {\n    let ships = this.ships();\n    ships.forEach(item => this.remove(item.ship));\n  }\n\n  launchRandomly(ships, { seed=undefined, keepShape=false }={}) {\n    //Cast ship board placement to array of ships\n    ships = ships.map(ship => ship.ship ? ship.ship : ship);\n    let solvable = true;\n\n    let random = seedrandom(seed);\n    let rand = () => Math.floor(random() * 229); //229 is 50th prime number\n\n    ships.forEach(ship => {\n\n      if (!keepShape && rand() % 2) {\n        ship.rotate();\n      }\n\n      let availableSpots = Board.availableSpots(this, ship);\n\n      if (availableSpots.length === 0) {\n        solvable = false;\n        return;\n      }\n\n      let spot = availableSpots[rand() % availableSpots.length];\n      this.launch(spot, ship);\n    });\n\n    return solvable;\n  }\n\n  shoot(target) {\n    let setup = this.setup();\n    let state = this._state;\n    let history = this._history;\n    let [targetCol, targetRow] = target;\n    let ship;\n    let hitPointsLeft;\n    let result;\n\n    if (state[targetRow][targetCol] === UNREVEALED) {\n      result = setup[targetRow][targetCol];\n      if (result === SINK) {\n        ship = this._shipsBoard[targetRow][targetCol];\n\n        hitPointsLeft = ship.hit();\n\n        if (hitPointsLeft === 0) {\n          this.sinkShip(ship);\n          result = SINK;\n        } else {\n          result = HIT;\n        }\n      }\n    } else {\n      result = state[targetRow][targetCol];\n    }\n\n    history.push({\n      target,\n      result,\n      ship,\n    });\n\n    state[targetRow][targetCol] = result;\n\n    return {\n      result,\n      ship,\n    };\n  }\n\n  sinkShip(ship) {\n    let shipsPos = this.ships();\n    let dim = this.dim();\n    let shipPos = shipsPos.find(shipPos => shipPos.ship === ship);\n\n    if (!shipPos) {\n      return false;\n    }\n\n    let orientation = ship.shape();\n    let size = ship.size();\n    let [totalCol, totalRow] = dim;\n    let [targetCol, targetRow] = shipPos.pos;\n    let state = this._state;\n\n    shipPos.ship.sink();\n    if (orientation === SHIP_SHAPES.HORIZONTAL) {\n      for (let i = -1; i <= size && targetCol + i < totalCol; i++) {\n        //row above ship\n        if (targetRow !== 0 && (targetCol + i) >= 0) {\n          state[targetRow - 1][targetCol + i] = WATER;\n        }\n\n        //around ship\n        if (i === -1 || i === size) {\n          state[targetRow][Math.max(targetCol + i, 0)] = WATER;\n        } else {\n          state[targetRow][Math.max(targetCol + i, 0)] = SINK;\n        }\n\n        //row below ship\n        if (targetRow !== totalRow - 1 && (targetCol + i) >= 0) {\n          state[targetRow + 1][targetCol + i] = WATER;\n        }\n      }\n\n      return true;\n    } else if (orientation === SHIP_SHAPES.VERTICAL) {\n      for (let i = -1; i <= size && targetRow + i < totalRow; i++) {\n        //col on the left hand side of the ship\n        if (targetCol !== 0 && (targetRow + i) >= 0) {\n          state[targetRow + i][targetCol - 1] = WATER;\n        }\n\n        //around ship\n        if (i === -1 || i === size) {\n          state[Math.max(targetRow + i, 0)][targetCol] = WATER;\n        } else {\n          state[Math.max(targetRow + i, 0)][targetCol] = SINK;\n        }\n\n        //col on the right hand side of the ship\n        if (targetCol !== totalCol - 1 && (targetRow + i) >= 0) {\n          state[targetRow + i][targetCol + 1] = WATER;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // End of interface for ships\n\n  // Interface for setup, state and printing\n  state() {\n    return this._state;\n  }\n\n  setup() {\n    return this._setup;\n  }\n\n  unrevealedCells() {\n    let unrevealed = this.state().map(\n      (row, rowId) => row.map(\n        (cell, colId) => cell === UNREVEALED ? [colId, rowId] : null\n      )\n    );\n    return _.flatten(unrevealed).filter(item => item !== null);\n  }\n\n  toString() {\n    let state = this.state();\n\n    return state.map(row => '[ ' + row.map(\n      cell => NUM_2_STR[cell]\n    ).join(' ') + ' ]').join('\\n');\n  }\n\n  setupToString() {\n    let setup = this.setup();\n\n    return setup.map(row => '[ ' + row.map(\n      cell => NUM_2_STR[cell]\n    ).join(' ') + ' ]').join('\\n');\n  }\n\n  history() {\n    return this._history;\n  }\n}\n\nexport default Board;\n","import Board from './Board';\n\nclass Player {\n  enter(game) {\n    this._game = game;\n  }\n\n  leave() {\n    this._game = undefined;\n  }\n\n  isInGame() {\n    return this._game !== undefined;\n  }\n\n  ready() {\n    return false;\n  }\n\n  board(board) {\n    if (board instanceof Board) {\n      this._board = board;\n    }\n\n    return this._board;\n  }\n\n  ships(ships) {\n    if (Array.isArray(ships)) {\n      this._ships = ships;\n    }\n\n    return this._ships;\n  }\n\n  floatingShips() {\n    return this._ships.filter(ship => ship.hitpoints() > 0);\n  }\n\n  setup(ships) {\n    if (Array.isArray(ships)) {\n      this._ships = ships;\n    }\n\n    return false;\n  }\n\n  turn(opponents, prevShootState) {\n    return [0, 0];\n  }\n\n  win() {\n    return;\n  }\n\n  lose() {\n    return;\n  }\n}\n\nexport default Player;\n","import _ from 'lodash';\n\nimport Ship from './Ship';\nimport Board from './Board';\nimport Player from './Player';\n\nconst SHIP_TYPES = Ship.types();\nconst { WATER, HIT, SINK, ERROR } = Board.results();\n\nconst UNREADY = -1;\nconst READY = 0;\nconst SETUP = 1;\nconst BATTLE = 2;\nconst FINISHED = 3;\n\nconst STATE_ENUMS = {\n  UNREADY,\n  READY,\n  SETUP,\n  BATTLE,\n  FINISHED,\n};\n\nclass Game {\n  static states() {\n    return STATE_ENUMS;\n  }\n\n  static defaultShipTypesList() {\n    return [\n      SHIP_TYPES[0],\n      SHIP_TYPES[0],\n      SHIP_TYPES[0],\n      SHIP_TYPES[0],\n      SHIP_TYPES[1],\n      SHIP_TYPES[1],\n      SHIP_TYPES[1],\n      SHIP_TYPES[2],\n      SHIP_TYPES[2],\n      SHIP_TYPES[3],\n    ];\n  }\n\n  static defaultDim() {\n    return [10, 10];\n  }\n\n  //Standard BATTLESHIPS rules:\n  //10x10 board for following ships:\n  //four one-sized\n  //three two-sized\n  //two three-sized\n  //one four-sized\n  constructor({\n    dim=Game.defaultDim(),\n    shipTypes=Game.defaultShipTypesList(),\n  } = {}) {\n    this._dim = dim;\n    this._shipTypes = shipTypes;\n    this._players = [];\n    this._state = UNREADY;\n    this._started = false;\n    this._winners = [];\n    this._losers = [];\n    this._history = [];\n    this._turn = 0;\n  }\n\n  _changeState(newState) {\n    this._state = newState;\n  }\n\n  dim() {\n    return this._dim;\n  }\n\n  turnNo() {\n    return this._turn;\n  }\n\n  players() {\n    return this._players;\n  }\n\n  currentPlayer() {\n    return this.players()[this.currentPlayerNo()];\n  }\n\n  currentPlayerNo() {\n    return this.turnNo() % this.players().length;\n  }\n\n  winners() {\n    return this._winners;\n  }\n\n  losers() {\n    return this._losers;\n  }\n\n  isPlayerIn(player) {\n    return this._players.indexOf(player) !== -1;\n  }\n\n  add(player) {\n    if (!this.isPlayerIn(player)) {\n      this._players.push(player);\n      player.enter(this);\n    }\n  }\n\n  remove(player) {\n    if (this.isPlayerIn(player)) {\n      this._players = this._players.filter(_player => _player !== player);\n      player.leave();\n    }\n  }\n\n  state() {\n    return this._state;\n  }\n\n  history(player) {\n    let history = this._history;\n\n    if (player instanceof Player) {\n      history = history.filter(entry => entry.shootingPlayer === player);\n    }\n\n    return history;\n  }\n\n  _prevShootOf(player) {\n    return _.last(this.history(player)) || {};\n  }\n\n  async ready() {\n    let players = this._players;\n    let promises;\n\n    if (players.length < 2) {\n      return false;\n    } else {\n      promises = players.map(player => player.ready());\n      await Promise.all(promises);\n      this._changeState(READY);\n    }\n  }\n\n  _assignBoardsToPlayers() {\n    this._boards = this._players.map(player => {\n      let board = new Board(this.dim());\n      player.board(board);\n      return board;\n    });\n  }\n\n  _createShips() {\n    return this._shipTypes.map(type => new Ship(type));\n  }\n\n  async start(cb = _.noop) {\n    this._cb = cb;\n    let players = this._players;\n\n    if (this.state() !== READY) {\n      return this._started = false;\n    } else {\n      this._changeState(SETUP);\n      this._assignBoardsToPlayers();\n      return await this.setup(players);\n    }\n  }\n\n  _resetAttempts() {\n    delete this._attempts;\n  }\n\n  _attempt(players) {\n    let attempts = this._attempts;\n\n    if (!attempts) {\n      attempts = this._attempts = players.reduce((map, player) => {\n        map.set(player, 1);\n        return map;\n      }, new Map());\n    } else {\n      for (let player of players) {\n        attempts.set(\n          player,\n          attempts.get(player) + 1,\n        );\n      }\n    }\n\n    return attempts;\n  }\n\n  async setup(players) {\n    let attempts = Array.from(this._attempt(players));\n\n    if (_.values(attempts).some(attempt => attempt[1] > 3)) {\n\n      let winners = attempts.filter(attempt => attempt[1] < 4)\n                      .map(attempt => attempt[0]);\n      let losers = attempts.filter(attempt => attempt[1] > 3)\n                      .map(attempt => attempt[0]);\n      this.finish(winners, losers);\n      return false;\n    }\n\n    players.map(player => player.ships(this._createShips()));\n    let promises = players.map(player => player.setup(player.ships()));\n\n    await Promise.all(promises);\n    let verdicts = players.map(player => this.verify(player.board(), player.ships()));\n\n    if (verdicts.every(verdict => verdict)) {\n      this._changeState(BATTLE);\n      return this._started = true;\n    } else {\n      players = players.reduce((players, player, i) => {\n        if (!verdicts[i]) {\n          players.push(player);\n        }\n\n        return players;\n      }, []);\n\n      return this.setup(players);\n    }\n  }\n\n  verify(board) {\n    if (this._shipTypes.length !== board.ships().length) {\n      return false;\n    }\n\n    return Board.verifySetup(board);\n  }\n\n  _nextTurn() {\n    this._turn++;\n  }\n\n  async turn() {\n    let currentPlayer = this.currentPlayer();\n    let opponents = this.players().filter(pl => pl !== currentPlayer);\n    let attempts = 1;\n    let turn = this.turnNo();\n    let prevShoot = this._prevShootOf(currentPlayer);\n    let { player, target } = await currentPlayer.turn(opponents, prevShoot);\n    let shootState = {\n      shootingPlayer: currentPlayer,\n      recievingPlayer: player,\n      turn,\n      target,\n    };\n\n    while (!Board.verifyShootingTarget(player.board(), target) && attempts < 3) {\n      shootState.result = ERROR;\n      this._history.push(shootState);\n      ({ player, target } = await currentPlayer.turn(opponents, prevShoot));\n      attempts++;\n    }\n\n    if (attempts > 2) {\n      shootState.result = ERROR;\n      this._history.push(shootState);\n      this.finish(opponents, [currentPlayer]);\n      return false;\n    }\n\n    let { result } = player.board().shoot(target);\n    shootState.result = result;\n    this._history.push(shootState);\n    await this._cb(shootState);\n\n    if (result === WATER) {\n      this._nextTurn();\n    } else if (result === HIT) {\n      return this.turn();\n    } else if (result === SINK) {\n      if (player.floatingShips().length === 0) {\n        this.finish([currentPlayer], [player]);\n        return;\n      } else {\n        return this.turn();\n      }\n    }\n\n    return result;\n  }\n\n  finish(winners, losers) {\n    this._changeState(FINISHED);\n    this._resetAttempts();\n    this._winners = winners;\n    this._losers = losers;\n\n    for (let winner of winners) {\n      winner.win();\n    }\n\n    for (let loser of losers) {\n      loser.lose();\n    }\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport styles from './Menu.module.css';\n\nclass Menu extends Component {\n  render() {\n    return (\n      <div className={ styles.menuContainer }>\n        <ul className={ styles.menu }>\n          <li className={ styles.item }>\n            <div className={ styles.pixelFlag }></div>\n            <div\n              className={ styles.pixelFlagText }\n              onClick={ this.props.newGame }\n            >New game</div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport styles from './SelectionList.module.css';\n\nclass SelectionList extends Component {\n\n  select = item => {\n    this.selected = item;\n    this.props.select(item);\n  };\n\n  render() {\n\n    this.selected = this.selected || this.props.selected;\n\n    let items = this.props.items.map((item, index) => (\n      <li\n        key={ index }\n        className={ item === this.selected ? styles.selected : styles.item }\n        onClick={ this.select.bind(this, item) }\n      >\n        { item.name }\n      </li>\n    ));\n\n    return (\n      <ul className={ styles.list }>\n        { items }\n      </ul>\n    );\n  }\n}\n\nexport default SelectionList;\n","import seedrandom from 'seedrandom';\n\nimport Player from '../Models/Player';\n\nconst PRIME = 229;\nconst NUM = PRIME;\n\nclass EasyAI extends Player {\n\n  constructor({\n    seed = Math.floor(Math.random() * PRIME),\n    delay = undefined,\n    name = 'Easy AI',\n  }={}) {\n    super();\n    this._random = seedrandom(seed);\n    this._name = name;\n    if (delay !== undefined) {\n      this.delay(delay);\n    }\n  }\n\n  name() {\n    return this._name;\n  }\n\n  random() {\n    return Math.floor(this._random() * NUM);\n  }\n\n  ready() {\n    return true;\n  }\n\n  delay(delay) {\n    if (typeof delay === 'number') {\n      this._delay = delay;\n    }\n\n    return this._delay;\n  }\n\n  setup(ships) {\n    let delay = this._delay;\n\n    if (delay === undefined) {\n      return this._setup(ships);\n    } else {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => resolve(this._setup(ships)), delay);\n      });\n    }\n  }\n\n  async turn(opponents, prevShootState) {\n    let delay = this._delay;\n\n    if (delay === undefined) {\n      return await this._turn(opponents, prevShootState);\n    } else {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => resolve(this._turn(opponents, prevShootState)), delay);\n      });\n    }\n  }\n\n  _setup(ships) {\n    super.setup(ships);\n    let boardNeedsSetup = true;\n    let board = this.board();\n\n    while (boardNeedsSetup) {\n      let seed = this.random();\n      console.log('Setting up random board with seed: ', seed);\n\n      board.clear();\n      boardNeedsSetup = !board.launchRandomly(ships, { seed });\n    }\n\n    return board;\n  }\n\n  _turn(opponents, prevShootState) {\n    let board = opponents[0].board();\n\n    let available = board.unrevealedCells();\n    let pos = available[this.random() % available.length];\n\n    return {\n      player: opponents[0],\n      target: pos,\n    };\n  }\n}\n\nexport default EasyAI;\n","import EasyAI from './EasyAI';\nimport Board from '../Models/Board';\nimport Ship from '../Models/Ship';\n\nconst PRIME = 229;\nconst RESULTS = Board.results();\nconst { HORIZONTAL, VERTICAL } = Ship.shapes();\n\nclass MediumAI extends EasyAI {\n\n  constructor({\n    seed = Math.floor(Math.random() * PRIME),\n    delay = undefined,\n    name = 'Medium AI',\n  }={}) {\n    super({\n      seed, delay, name,\n    });\n  }\n\n  _availableSpotsAround(opponents, target, orientation=true) {\n    let board = opponents[0].board();\n    let available = board.unrevealedCells();\n\n    return available.filter(pos => {\n      if (\n        target[1] === pos[1] &&\n        (target[0] - 1 === pos[0] || target[0] + 1 === pos[0]) &&\n        (orientation === true || orientation === HORIZONTAL)\n      ) {\n        //HORIZONTAL\n        return true;\n      } else if (\n        target[0] === pos[0] &&\n        (target[1] - 1 === pos[1] || target[1] + 1 === pos[1]) &&\n        (orientation === true || orientation === VERTICAL)\n      ) {\n        //VERTICAL\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  async _turn(opponents, prevShootState) {\n    let prevResult = prevShootState.result;\n    let { firstCellHit, orientationOfHuntedShip, lastCellHit } = this;\n    let available = [];\n    let lastHITSpots = [];\n    let firstHITSpots = [];\n\n    //It's not a HIT and we didn't HIT anything previously\n    if (prevResult !== RESULTS.HIT && prevResult !== RESULTS.SINK && !firstCellHit) {\n      return super._turn(opponents, prevShootState);\n    } else if (prevResult === RESULTS.SINK) { //Ship is already sunken\n      this.firstCellHit = undefined;\n      this.orientationOfHuntedShip = undefined;\n      this.lastCellHit = undefined;\n      return super._turn(opponents, prevShootState);\n    } else {\n      if (!firstCellHit) { //Previous HIT was the first one\n        this.firstCellHit = prevShootState.target;\n        firstHITSpots = this._availableSpotsAround(opponents, prevShootState.target);\n      } else if (firstCellHit && prevResult === RESULTS.WATER) { //Previous attempt was WATER\n        firstHITSpots = this._availableSpotsAround(opponents, firstCellHit);\n        if (lastCellHit) { //But the other end was targeted\n          lastHITSpots = this._availableSpotsAround(\n            opponents, lastCellHit, orientationOfHuntedShip\n          );\n        }\n      } else if (firstCellHit && prevResult === RESULTS.HIT) { //Previous attempt was HIT\n        if (orientationOfHuntedShip === undefined) { //And we didn't know orientation\n          if (firstCellHit[0] === prevShootState.target[0]) {\n            orientationOfHuntedShip = VERTICAL;\n          } else if (firstCellHit[1] === prevShootState.target[1]) {\n            orientationOfHuntedShip = HORIZONTAL;\n          }\n        }\n\n        this.lastCellHit = prevShootState.target;\n\n        lastHITSpots = this._availableSpotsAround(\n          opponents, prevShootState.target, orientationOfHuntedShip\n        );\n        firstHITSpots = this._availableSpotsAround(\n          opponents, firstCellHit, orientationOfHuntedShip\n        );\n      }\n\n      available = firstHITSpots.concat(lastHITSpots);\n\n      if (available.length) {\n        return {\n          player: opponents[0],\n          target: available[this.random() % available.length],\n        };\n      } else { //Fallback to random shooting\n        this.firstCellHit = undefined;\n        this.orientationOfHuntedShip = undefined;\n        this.lastCellHit = undefined;\n        return super._turn(opponents, prevShootState);\n      }\n    }\n  }\n}\n\nexport default MediumAI;\n","import nj from 'numjs';\n\nimport MediumAI from './MediumAI';\nimport * as data from '../static/229-data.json';\n\nconst DATA = nj.array(data.default).reshape(100);\nconst PRIME = 229;\n\nclass HardAI extends MediumAI {\n  constructor({\n    seed = Math.floor(Math.random() * PRIME),\n    delay = undefined,\n    name = 'Hard AI',\n  }={}) {\n    super({\n      seed, delay, name,\n    });\n  }\n\n  async _turn(opponents, prevShootState) {\n    let proposition = await super._turn(opponents, prevShootState);\n\n    if (this.firstCellHit === undefined) {\n      let state = opponents[0].board().state().map(row => row.map(cell => cell === 0 ? 1 : 0));\n      state = nj.array(state).reshape(100);\n      let data = DATA.multiply(state);\n      let max = data.max();\n      data = data.subtract(max);\n      let prob = nj.softmax(data);\n      max = prob.max();\n      let index = prob.tolist().indexOf(max);\n      proposition.target = [index % 10, Math.floor(index / 10)];\n      return proposition;\n    } else {\n      return proposition;\n    }\n  }\n}\n\nexport default HardAI;\n","import * as tf from '@tensorflow/tfjs';\nimport _ from 'lodash';\n\nimport Board from '../Models/Board';\nimport MediumAI from './MediumAI';\n\nconst { UNREVEALED, WATER, HIT, SINK } = Board.results();\nconst PRIME = 229;\n\nclass ConvNLAI extends MediumAI {\n  constructor({\n    seed = Math.floor(Math.random() * PRIME),\n    delay = undefined,\n    name = 'Neural Network AI',\n  }={}) {\n    super({\n      seed, delay, name,\n    });\n  }\n\n  async ready() {\n    this.model = await tf.loadModel(`${window.location.href}conv-model/model.json`);\n    return true;\n  }\n\n  async _turn(opponents, prevShootState) {\n    let boardState = opponents[0].board().state();\n    let modelFeed = boardState.map(row => row.map(cell => {\n      if (cell === UNREVEALED) {\n        return 5;\n      } else if (cell === WATER) {\n        return 0;\n      } else if (cell === HIT) {\n        return 1;\n      } else if (cell === SINK) {\n        return 0;\n      }\n\n      return 0;\n    }));\n\n    let prob = await this.model.predict(tf.tensor2d(modelFeed).reshape([1, 10, 10, 1])).data();\n    prob = _.flatten(boardState).map((state, index) => state === UNREVEALED ? prob[index] : 0);\n    let { index } = prob.reduce((acc, curr, currIndex) => {\n      if (curr > acc.max) {\n        return { index: currIndex, max: curr };\n      } else {\n        return acc;\n      }\n    }, { index: -1, max: 0 });\n\n    let col = index % 10;\n    let row = Math.floor(index / 10);\n\n    //fallback to standard MediumAI\n    if (prevShootState.result === HIT || this.firstCellHit) {\n      return await super._turn(opponents, prevShootState);\n    }\n\n    return {\n      player: opponents[0],\n      target: [col, row],\n    };\n  }\n}\n\nexport default ConvNLAI;\n","import seedrandom from 'seedrandom';\nimport _ from 'lodash';\n\nimport Player from '../Models/Player';\n\nconst PRIME = 229;\nconst NUM = PRIME;\n\nclass LocalPlayer extends Player {\n\n  constructor({\n    seed = Math.floor(Math.random() * PRIME),\n    name = 'Local Player',\n    setupCallback = _.noop,\n    turnCallback = _.noop,\n  }={}) {\n    super();\n    this._random = seedrandom(seed);\n    this._name = name;\n    this.setupCallback = setupCallback;\n    this.turnCallback = turnCallback;\n  }\n\n  name() {\n    return this._name;\n  }\n\n  random() {\n    return Math.floor(this._random() * NUM);\n  }\n\n  ready() {\n    return true;\n  }\n\n  async setup(ships) {\n    this.ships(ships);\n    return await this.setupCallback(ships);\n  }\n\n  async turn(opponents, prevShootState) {\n    return await this.turnCallback();\n  }\n}\n\nexport default LocalPlayer;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport SelectionList from './SelectionList';\nimport * as ComputerPlayers from '../AI';\nimport LocalPlayer from '../LocalPlayer/LocalPlayer';\n\nimport styles from './PlayersList.module.css';\nimport './list.css';\n\nclass PlayersList extends Component {\n\n  state = {\n    selectedPlayers: [\n      { cls: ComputerPlayers.EasyAI, name: 'Easy' },\n      { cls: ComputerPlayers.EasyAI, name: 'Easy' },\n    ],\n    firstPlayer: 0,\n  };\n\n  startGame = () => {\n    // let arr = this.state.selectedPlayers;\n    // let firstPlayer = this.state.firstPlayer;\n    // let players = [arr[firstPlayer]].concat(arr.splice(firstPlayer, 1));\n    let players = this.state.selectedPlayers.map(player => player.cls);\n    if (this.props.onStartGame) {\n      this.props.onStartGame(\n        players\n      );\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.players = _.keys(ComputerPlayers).map(name => ({\n        name: name.replace('AI', ''),\n        cls: ComputerPlayers[name],\n      })\n    );\n    this.playersWithLocal = _.clone(this.players);\n    this.playersWithLocal.push({\n      cls: LocalPlayer,\n      name: 'Local Player',\n    });\n  }\n\n  selectPlayer(selected, index) {\n    let { selectedPlayers, firstPlayer } = this.state;\n    firstPlayer = index;\n    selectedPlayers[index] = selected;\n\n    this.setState({ selectedPlayers, firstPlayer });\n  }\n\n  render() {\n    let whoGoesFirst = '';\n\n    if (this.state.firstPlayer !== -1) {\n      whoGoesFirst = (\n        <div className={ styles.firstPlayer }>\n          Player { this.state.firstPlayer + 1 } goes first\n        </div>\n      );\n    }\n\n    return (\n      <div className={ styles.playersPicker }>\n        { whoGoesFirst }\n        <div className={ styles.playersLists }>\n          <div className={ styles.playersList }>\n            <div className={ styles.playerNo }>Player 1:</div>\n            <SelectionList\n              items={ this.playersWithLocal }\n              selected={ this.players[0] }\n              select={\n                selected => { this.selectPlayer(selected, 0); }\n              }\n            />\n          </div>\n          <div className={ styles.VS }></div>\n          <div className={ styles.playersList }>\n            <div className={ styles.playerNo }>Player 2:</div>\n            <SelectionList\n              items={ this.players }\n              selected={ this.players[0] }\n              select={\n                selected => { this.selectPlayer(selected, 1); }\n              }\n            />\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          disabled={ this.state.selectedPlayers.length < 2 }\n          onClick={ this.startGame }\n          className={ styles.startGame }\n        >Start</button>\n      </div>\n    );\n  }\n}\n\nexport default PlayersList;\n","import React, { Component } from 'react';\nimport styles from './ShipComponent.module.css';\n\nclass ShipComponent extends Component {\n  render() {\n    let { name, size, hitpoints, highlight } = this.props;\n    let damage = size - hitpoints;\n    let structure = [];\n\n    for (let i = 0; i < damage; i++) {\n      structure.push(\n        <div key={ i } className={ styles.damagedPart }></div>\n      );\n    }\n\n    for (let i = 0; i < hitpoints; i++) {\n      structure.push(\n        <div key={ damage + i } className={ styles.healthyPart }></div>\n      );\n    }\n\n    return (\n      <div className={ highlight ? styles.highlightedShip : styles.ship }>\n        <div className={ styles.name }>{ name }</div>\n        <div className={ styles.structure }>\n          { structure }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShipComponent;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport styles from './ShipList.module.css';\n\nimport ShipComponent from './ShipComponent';\n\nclass ShipList extends Component {\n\n  onClick = ship => {\n    this.props.onClick(ship);\n  };\n\n  render() {\n    let { ships, side='left', mode } = this.props;\n    let style;\n\n    if (mode === 'setup') {\n      style = styles.clickable;\n    } else {\n      style = styles.wrapper;\n    }\n\n    ships = ships.map((ship, i) =>\n      (<div\n        onClick={ mode === 'setup' ? this.onClick.bind(this, ship) : _.noop }\n        className={ style }\n        key={ i }\n       ><ShipComponent\n         name={ ship.name() }\n         size={ ship.size() }\n         hitpoints={ ship.hitpoints() }\n         highlight={ ship === this.props.activeShip }\n        /></div>)\n    );\n\n    return (\n      <div\n        className={ styles[side] }\n      >\n        { ships }\n      </div>\n    );\n  }\n}\n\nexport default ShipList;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport styles from './BoardView.module.css';\n\nimport Board from '../Models/Board';\nimport Ship from '../Models/Ship';\n\nconst RESULTS = Board.results();\nconst { HORIZONTAL, VERTICAL } = Ship.shapes();\n\nclass BoardView extends Component {\n\n  state = {\n    activeIndex: undefined,\n  };\n\n  componentDidMount() {\n    if (this.props.mode === 'setup') {\n      window.document.addEventListener('keydown', this.keyDown);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.mode === 'setup') {\n      window.document.removeEventListener('keydown', this.keyDown);\n    }\n  }\n\n  keyDown = e => {\n    if (e.key === 'r' && this.props.mode === 'setup') {\n      this.props.onRotate();\n    }\n  };\n\n  mouseOut = () => this.setState({ activeIndex: undefined });\n  mouseMove = e => {\n    let target = e.target;\n    if (!target.childElementCount) {\n      let parent = target.parentElement;\n      this.setState({\n        activeIndex: Array.from(parent.children).indexOf(target),\n      });\n    }\n  };\n\n  calculateStyleName(cell, index, isValidPosition, isValidShootingTarget) {\n    let { mode, activeShip } = this.props;\n    let { activeIndex } = this.state;\n    let stylesString;\n    let style;\n\n    if (cell === RESULTS.HIT) {\n      style = 'hit';\n    } else if (cell === RESULTS.SINK) {\n      style = 'sink';\n    } else if (cell === RESULTS.WATER) {\n      style = 'water';\n    } else {\n      style = 'unrevealed';\n    }\n\n    if (mode === 'battle' && isValidShootingTarget && index === activeIndex) {\n      return styles.validTarget;\n    }\n\n    if (mode !== 'setup' || activeIndex === undefined || !activeShip) {\n      return styles[style];\n    }\n\n    let target = [activeIndex % 10, Math.floor(activeIndex / 10)];\n    let [col, row] = target;\n    let someCol = index % 10;\n    let someRow = Math.floor(index / 10);\n\n    if (activeIndex === index) {\n      stylesString = styles.active;\n    } else if (\n      activeShip.shape() === HORIZONTAL &&\n      row === someRow &&\n      col + activeShip.size() > someCol &&\n      col < someCol\n    ) {\n      stylesString = styles.active;\n    } else if (\n      activeShip.shape() === VERTICAL &&\n      col === someCol &&\n      row + activeShip.size() > someRow &&\n      row < someRow\n    ) {\n      stylesString = styles.active;\n    } else {\n      stylesString = styles[style];\n    }\n\n    if (!isValidPosition && stylesString === styles.active) {\n      stylesString = styles.invalid;\n    }\n\n    return stylesString;\n  }\n\n  launch = (isValidPosition, target) => {\n    if (isValidPosition) {\n      this.setState({\n        activeIndex: undefined,\n      });\n      this.props.launch(target);\n    }\n  };\n\n  fire = target => this.props.fire(target);\n\n  render() {\n    let { board, mode, activeShip } = this.props;\n    let { activeIndex } = this.state;\n    let dim = board.dim();\n    let style;\n    let target;\n    let isValidPosition;\n    let isValidShootingTarget;\n    let boardState;\n\n    if (mode === 'setup') {\n      boardState = board.setup();\n    } else if (mode === 'battle') {\n      boardState = board.state();\n    } else if (mode === 'view') {\n      boardState = board.state();\n    }\n\n    target = [activeIndex % 10, Math.floor(activeIndex / 10)];\n    isValidShootingTarget = Board.verifyShootingTarget(board, target);\n    if (activeShip) {\n      isValidPosition = Board.verifyShipPosition(board, target, activeShip);\n    }\n\n    let [totalCol, totalRow] = dim;\n    let cells = _.flatten(boardState).map(\n      (cell, index) => {\n        style = this.calculateStyleName(cell, index, isValidPosition, isValidShootingTarget);\n\n        return <div key={ index } className={ style }></div>;\n      }\n    );\n\n    let onClickCallback;\n    let onMoveCallback;\n    let onLeaveCallback;\n\n    if (mode === 'setup' && activeShip) {\n      onClickCallback = this.launch.bind(this, isValidPosition, target);\n      onMoveCallback = this.mouseMove;\n      onLeaveCallback = this.mouseOut;\n    } else if (mode === 'battle') {\n      onClickCallback = isValidShootingTarget ? this.fire.bind(this, target) : _.noop;\n      onMoveCallback = this.mouseMove;\n      onLeaveCallback = this.mouseOut;\n    } else {\n      onClickCallback = _.noop;\n      onMoveCallback = _.noop;\n      onLeaveCallback = _.noop;\n    }\n\n    return (\n      <div\n        className={ `${styles.board} ${styles[mode]}` }\n        onPointerMove={ onMoveCallback }\n        onPointerLeave={ onLeaveCallback }\n        onClick={ onClickCallback }\n        style={{\n          gridTemplateColumns: `repeat(${totalCol}, 1fr )`,\n          gridTemplateRows: `repeat(${totalRow}, 1fr )`,\n        }}\n      >\n        { cells }\n      </div>\n    );\n  }\n}\n\nexport default BoardView;\n","import React, { Component } from 'react';\nimport styles from './Battlefield.module.css';\n\nimport ShipList from './ShipList';\nimport BoardView from './BoardView';\nimport LocalPlayer from '../LocalPlayer/LocalPlayer';\n\nclass Battlefield extends Component {\n\n  render() {\n    let { gameRunner } = this.props.gameInterface;\n    let players = gameRunner.getPlayers();\n\n    let boardOneMode = players[1] instanceof LocalPlayer ? 'battle' : 'view';\n    let boardTwoMode = players[0] instanceof LocalPlayer ? 'battle' : 'view';\n\n    if (players[0] instanceof LocalPlayer) {\n      if (gameRunner.getCurrentPlayer() === 0) {\n        boardTwoMode = 'battle';\n      } else {\n        boardTwoMode = 'view';\n      }\n    } else if (players[1] instanceof LocalPlayer) {\n      if (gameRunner.getCurrentPlayer() === 0) {\n        boardOneMode = 'battle';\n      } else {\n        boardOneMode = 'view';\n      }\n    }\n\n    return (\n      <div className={ styles.battlefield }>\n        <div className={ styles.leftShipList }>\n          <div className={ styles.fleetName }>\n            { `${players[0].name()} fleet:` }\n          </div>\n          <ShipList\n            ships={ players[0].ships() }\n          ></ShipList>\n        </div>\n        <div className={ styles.boards }>\n          <div\n            className={\n              gameRunner.getCurrentPlayer() === 0 ? styles.currentPlayer : styles.player\n            }\n          >\n            { players[0].name() }\n          </div>\n          <div className={ styles.turn } >\n            { gameRunner.getTurnNo() }\n          </div>\n          <div\n            className={\n              gameRunner.getCurrentPlayer() === 1 ? styles.currentPlayer : styles.player\n            }\n          >\n            { players[1].name() }\n          </div>\n          <BoardView\n            board={ players[0].board() }\n            mode={ boardOneMode }\n            fire={ gameRunner.finishLocalPlayerTurn }\n          />\n          <div className={ styles.gap }></div>\n          <BoardView\n            board={ players[1].board() }\n            mode={ boardTwoMode }\n            fire={ gameRunner.finishLocalPlayerTurn }\n          />\n        </div>\n        <div className={ styles.rightShipList }>\n          <div className={ styles.fleetName }>\n            { `${players[1].name()} fleet:` }\n          </div>\n          <ShipList\n            ships={ players[1].ships() }\n            side={ 'right' }\n          ></ShipList>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Battlefield;\n","import React, { Component } from 'react';\nimport styles from './ConclusionScreen.module.css';\n\nconst DEFAULT_STATE = {\n  hidden: false,\n};\n\nclass ConclusionScreen extends Component {\n\n  state = DEFAULT_STATE;\n\n  hide = () => {\n    this.setState({ hidden: true });\n  };\n\n  render() {\n    let hidden = this.props.hidden || this.state.hidden;\n\n    return (\n      <div\n        className={ styles.modal }\n        style= {{\n          display: hidden ? 'none' : 'flex',\n        }}\n      >\n            <div className={ styles.conclusion }>\n              <div\n            className={ styles.X }\n            onClick={ this.hide }\n          ></div>\n          <div className={ styles.text }>{ this.props.player } won!</div>\n          <div className={ styles.box }></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConclusionScreen;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport styles from './SetupBoard.module.css';\n\nimport BoardView from '../Components/BoardView';\nimport ShipList from '../Components/ShipList';\n\nclass SetupBoard extends Component {\n\n  player = this.props.player;\n  ships = this.props.player.ships();\n  board = this.player.board();\n  state = {\n    activeShip: undefined,\n    ships: _.clone(this.ships),\n    ready: false,\n  };\n\n  takeShip = ship => {\n    this.setState({ activeShip: ship });\n  };\n\n  rotate = () => {\n    this.state.activeShip.rotate();\n    this.setState({ activeShip: this.state.activeShip });\n  };\n\n  launch = pos => {\n    let ship = this.state.activeShip;\n    let ships = this.state.ships;\n    this.board.launch(pos, ship);\n    ships = ships.filter(listedShip => listedShip !== ship);\n    let ready = !ships.length;\n    this.setState({ activeShip: undefined, ships, ready });\n  };\n\n  reset = () => {\n    this.board.clear();\n    this.setState({\n      activeShip: undefined,\n      ships: _.clone(this.ships),\n      ready: false,\n    });\n  };\n\n  rnd = () => {\n    let ships = this.state.ships;\n    let wasSuccess = this.board.launchRandomly(ships);\n    let attempts = 1000;\n\n    while (!wasSuccess) {\n      wasSuccess = this.board.launchRandomly(ships);\n      attempts--;\n      if (!attempts) {\n        throw new Error('Could not setup board randomly'); //Need a better error handling here\n      }\n    }\n\n    this.setState({\n      activeShip: undefined,\n      ships: [],\n      ready: true,\n    });\n  };\n\n  start = () => this.props.start();\n\n  render() {\n    return (\n      <div className={ styles.setup }>\n        <ShipList\n          mode={ 'setup' }\n          ships={ this.state.ships }\n          activeShip={ this.state.activeShip }\n          onClick={ this.takeShip }\n        />\n        <div className={ styles.boardSetup }>\n          <BoardView\n            mode={ 'setup' }\n            board={ this.board }\n            activeShip={ this.state.activeShip }\n            launch={ this.launch }\n            onRotate={ this.rotate }\n          />\n        </div>\n        <div className={ styles.controls }>\n          <div className={ styles.info }>\n            Click on a ship from your fleet to place it on the board,\n            <br/>\n            when ship is active press 'r' to rotate\n          </div>\n          <button\n            onClick={ this.reset }\n            className={ styles.reset }\n          >Reset board</button>\n          <button\n            onClick={ this.rnd }\n            className={ this.state.ships.length ? styles.rnd : styles.disabled }\n            disabled={ !this.state.ships.length }\n          >Randomly setup board</button>\n          <button\n            onClick={ this.start }\n            className={ this.state.ready ? styles.start : styles.disabled }\n            disabled={ !this.state.ready }\n          >To battle!</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SetupBoard;\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\n\nimport Game from './Models/Game';\n\nimport Menu from './Components/Menu';\nimport PlayersLists from './Components/PlayersLists';\nimport Battlefield from './Components/Battlefield';\nimport ConclusionScreen from './Components/ConclusionScreen';\nimport SetupBoard from './LocalPlayer/SetupBoard';\n\nconst GAME_STATES = Game.states();\n\nclass App extends Component {\n\n  createNewGame = () => {\n    let { gameRunner } = this.props.gameInterface;\n    gameRunner.createNewGame();\n  };\n\n  addPlayersAndStartGame = players => {\n    let { gameRunner } = this.props.gameInterface;\n\n    gameRunner.addPlayers(players);\n    gameRunner.startGame();\n  };\n\n  mainMenu = () => {\n    let { gameRunner } = this.props.gameInterface;\n\n    gameRunner.resetGame();\n  };\n\n  render() {\n    let contents;\n    let afterGame;\n    let { gameState, gameRunner } = this.props.gameInterface;\n\n    if (gameState === undefined) {\n      contents = <Menu newGame={ this.createNewGame }></Menu>;\n    } else if (gameState === GAME_STATES.UNREADY) {\n      contents = (\n        <div>\n          <PlayersLists\n            onStartGame={ this.addPlayersAndStartGame }\n          />\n        </div>\n      );\n    } else if (gameState === GAME_STATES.SETUP) {\n      contents = (\n        <SetupBoard\n          player = { gameRunner.getLocalPlayer() }\n          start = { gameRunner.finishLocalPlayerSetup }\n        />\n      );\n    } else if (gameState === GAME_STATES.BATTLE || gameState === GAME_STATES.FINISHED) {\n      contents = (\n        <Battlefield\n          gameInterface = { this.props.gameInterface }\n        />\n      );\n    } else {\n      contents = 'Something went wrong! Please refresh the page.';\n    }\n\n    if (gameState === GAME_STATES.FINISHED) {\n      afterGame = (\n        <div>\n          <ConclusionScreen\n            player={ this.props.gameInterface.gameRunner.winner() }\n            hidden={ gameState !== GAME_STATES.FINISHED }\n          />\n          <button\n            className={ styles.returnToMainMenu }\n            onClick={ this.mainMenu }\n          >Return to main menu</button>\n        </div>\n      );\n    }\n\n    return (\n      <div className={ styles.landing }>\n        <div className={ styles.fog }>\n          <div className={ styles.fogFirstLayer }></div>\n          <div className={ styles.fogSecondLayer }></div>\n          <div className={ styles.landingBackground }></div>\n        </div>\n        { contents }\n        { afterGame }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component, createContext } from 'react';\n\nimport Game from './Models/Game';\nimport LocalPlayer from './LocalPlayer/LocalPlayer';\n\nconst AI_DELAY = 500;\nconst GAME_STATES = Game.states();\nconst DEFAULT_STATE = {\n  localPlayer: undefined,\n  gameState: undefined,\n  board1: [[]],\n  board2: [[]],\n};\nconst GameContext = createContext(DEFAULT_STATE);\n\nclass GameRunner extends Component {\n  state = DEFAULT_STATE;\n\n  createNewGame = () => {\n    window.game = this.game = new Game();\n    this.setState({\n      gameState: this.game.state(),\n    });\n  };\n\n  finishLocalPlayerSetup = () => this.setupDeferred.resolve();\n  startLocalPlayerSetup = async ships => {\n    this.setState({\n      gameState: this.game.state(),\n    });\n\n    this.setupDeferred = {};\n    this.setupDeferred.promise = new Promise((res, rej) => {\n      this.setupDeferred.resolve = res;\n      this.setupDeferred.reject = rej;\n    });\n\n    await this.setupDeferred.promise;\n\n    return this.getLocalPlayer().board();\n  };\n\n  finishLocalPlayerTurn = target => this.turnDeferred.resolve(\n    { target, player: this.getPlayers()[1] }\n  );\n  startLocalPlayerTurn = async () => {\n    this.setState({\n      gameState: this.game.state(),\n    });\n\n    this.turnDeferred = {};\n    this.turnDeferred.promise = new Promise((res, rej) => {\n      this.turnDeferred.resolve = res;\n      this.turnDeferred.reject = rej;\n    });\n\n    let { target, player } = await this.turnDeferred.promise;\n\n    return {\n      player,\n      target,\n    };\n  };\n\n  addPlayers = players => {\n    let player;\n    players.forEach(PlayerCls => {\n      if (PlayerCls !== LocalPlayer) {\n        player = new PlayerCls({\n          delay: AI_DELAY,\n        });\n      } else {\n        player = new LocalPlayer({\n          setupCallback: this.startLocalPlayerSetup,\n          turnCallback: this.startLocalPlayerTurn,\n        });\n        this.setState({ localPlayer: player });\n      }\n\n      this.game.add(player);\n    });\n  };\n\n  getPlayers = () => this.game.players();\n  getLocalPlayer = () => this.game.players()[0];\n\n  updateFE = () => {\n    let players = this.getPlayers();\n\n    this.setState({\n      board1: players[0].board().state(),\n      board2: players[1].board().state(),\n    });\n  };\n\n  startGame = async () => {\n    await this.game.ready();\n    await this.game.start(this.updateFE);\n\n    this.setState({\n      gameState: this.game.state(),\n    });\n\n    while (this.game.state() !== GAME_STATES.FINISHED) {\n      await this.game.turn();\n      this.setState({\n        gameState: this.game.state(),\n      });\n    }\n  };\n\n  getBoardDim = () => this.game.dim();\n  getBoardState = playerId => this.game.players()[playerId].board().state();\n  getTurnNo = () => this.game.turnNo() + 1;\n  getCurrentPlayer = () => this.game.currentPlayerNo();\n\n  resetGame = () => {\n    delete this.game;\n    this.setState(DEFAULT_STATE);\n  };\n\n  winner = () => this.game.winners()[0].name();\n\n  render() {\n    return (\n      <GameContext.Provider\n        value={{\n          gameState: this.state.gameState,\n          gameRunner: {\n            createNewGame: this.createNewGame,\n            addPlayers: this.addPlayers,\n            getPlayers: this.getPlayers,\n            startGame: this.startGame,\n            getBoardDim: this.getBoardDim,\n            getBoardState: this.getBoardState,\n            getTurnNo: this.getTurnNo,\n            getCurrentPlayer: this.getCurrentPlayer,\n            resetGame: this.resetGame,\n            winner: this.winner,\n            localPlayerSetup: this.localPlayerSetup,\n            getLocalPlayer: this.getLocalPlayer,\n            finishLocalPlayerSetup: this.finishLocalPlayerSetup,\n            finishLocalPlayerTurn: this.finishLocalPlayerTurn,\n          },\n        }}\n      >\n        { this.props.children }\n      </GameContext.Provider>\n    );\n  }\n}\n\nexport { GameContext };\nexport default GameRunner;\n","import React, { Component, Children, cloneElement } from 'react';\nimport { GameContext } from './GameRunner';\n\nexport default class GameConsumer extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <GameContext.Consumer>\n        {\n          (gameInterface => Children.map(\n            children,\n            child => cloneElement(child, {\n              gameInterface,\n            })\n          ))\n        }\n      </GameContext.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './static/Styles/index.css';\nimport './static/Styles/reset.css';\n\nimport App from './App';\nimport GameRunner from './GameRunner';\nimport GameConsumer from './GameConsumer';\n\nReactDOM.render(\n  <GameRunner>\n    <GameConsumer>\n      <App />\n    </GameConsumer>\n  </GameRunner>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ship\":\"ShipComponent_ship__2cIuo\",\"highlightedShip\":\"ShipComponent_highlightedShip__18R94 ShipComponent_ship__2cIuo\",\"structure\":\"ShipComponent_structure__4YO9S\",\"name\":\"ShipComponent_name__lNwuy\",\"part\":\"ShipComponent_part__tLH3D\",\"damagedPart\":\"ShipComponent_damagedPart__24rLi ShipComponent_part__tLH3D\",\"healthyPart\":\"ShipComponent_healthyPart__2lKnr ShipComponent_part__tLH3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"Menu_menuContainer__3k4ZS\",\"menu\":\"Menu_menu__2pHaf\",\"item\":\"Menu_item__3qOhj\",\"pixelFlagText\":\"Menu_pixelFlagText__2nl09\",\"pixelFlag\":\"Menu_pixelFlag__2GWyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ConclusionScreen_modal__39kz8\",\"X\":\"ConclusionScreen_X__3h-xT\",\"conclusion\":\"ConclusionScreen_conclusion__3NmEa\",\"text\":\"ConclusionScreen_text__31rIR\",\"box\":\"ConclusionScreen_box__2SjJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"SelectionList_list__HYRMc\",\"item\":\"SelectionList_item__2XXX2\",\"selected\":\"SelectionList_selected__udYd0 SelectionList_item__2XXX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"right\":\"ShipList_right__3VN2T\",\"wrapper\":\"ShipList_wrapper__h7GPo\",\"clickable\":\"ShipList_clickable__3afGi\"};"],"sourceRoot":""}